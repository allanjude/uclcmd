---
- hosts: test_ucl
  gather_facts: false

  vars:
    tests_dir_local: "{{ playbook_dir }}/tests"  # at controller (localhost)
    tests_dir: /scratch/uclcmd/tests             # at client(s) (remote host(s))
    run_dir: /scratch/uclcmd                     # at client(s) (remote host(s))
  #   patterns: '*.in*'
  #   patterns: 'get.in'
  #   patterns: 'set.in'
  #   patterns: 'merge.in'
  #   patterns: 'include-*.in'

  tasks:

    #  - assert:
    #      that:
    #        - patterns is defined
    #      fail_msg: |-
    #        The variable *patterns* is not defined. Set it on the
    #        command line, e.g.  shell> ansible-playbook run_tests.yml
    #        -t tests-module -e patterns=get.in
    #    tags: always

    - assert:
        that: ansible_run_tags|difference(['all'])|length > 0
        fail_msg: |
          Can't run without any tag. This playbook is a collection of
          various tests. Use option --list-tags to list them all. Pick
          a test you want to run. Review the code of the test first.

    - assert:
        that: ansible_check_mode
        fail_msg: |
          You're running the playbook without option --check or
          equivalent -C. This can modify the files *.in in the
          directory tests. You'll have to restore the files to prevent
          other tests from crashing. Disable this test by setting the
          option '-e no_check=True'.
      when: not no_check|default(False)|bool
      tags: always

    # Find test files - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    - block:
        - find:
            paths: "{{ tests_dir }}"
            patterns: "{{ patterns }}"
          register: tests_in
        - debug:
            var: tests_in.files|map(attribute='path')|list
          when: debug|default(false)|bool
      tags: [tests-command, tests-module]

    # Command uclcmd all tests - - - - - - - - - - - - - - - - - - - - - - - - -

    - include_tasks:
        file: tasks/run-tests-command.yml
        apply:
          tags: tests-command
      loop: "{{ tests_in.files|map(attribute='path')|list }}"
      loop_control:
        loop_var: test_in
      tags: tests-command

    # Module ucl all tests - - - - - - - - - - - - - - - - - - - - - - - - - - -

    - include_tasks:
        file: tasks/run-tests-module.yml
        apply:
          tags: tests-module
      loop: "{{ tests_in.files|map(attribute='path')|list }}"
      loop_control:
        loop_var: test_in
      tags: tests-module

    # Module ucl include/merge/set all tests - - - - - - - - - - - - - - - - - -

    - import_tasks: tasks/tests-module-include.yml
    - import_tasks: tasks/tests-module-merge.yml
    - import_tasks: tasks/tests-module-set.yml

    # Module ucl Example get all formats - - - - - - - - - - - - - - - - - - - -

    - include_tasks:
        file: tasks/ex-get-all-formats.yml
        apply:
          tags: ex-get-all-formats
      tags: ex-get-all-formats

    # Module ucl Example get - - - - - - - - - - - - - - - - - - - - - - - - -

    - include_tasks:
        file: tasks/ex-get.yml
        apply:
          tags: ex-get
      tags: ex-get

    # Module ucl Example stderr - - - - - - - - - - - - - - - - - - - - - - - -

    - include_tasks:
        file: tasks/ex-get-err.yml
        apply:
          tags: ex-get-err
      tags: ex-get-err

    # Module ucl Example set - - - - - - - - - - - - - - - - - - - - - - - - -

    - include_tasks:
        file: tasks/ex-set.yml
        apply:
          tags: ex-set
      tags: ex-set

    # Module ucl Example remove - - - - - - - - - - - - - - - - - - - - - - - -

    - block:
        - ucl:
            path: "{{ tests_dir }}/set.in"
            upath: "rootkey.subkey.child"
            state: absent
          register: result
        - debug:
            msg: "{{ msg.splitlines() }}"
          vars:
            msg: |-
              {{ result|to_nice_yaml }}
          when: debug|default(false)|bool
      tags: ex-rm-1

    # Module ucl Example set input - - - - - - - - - - - - - - - - - - - - - -

    - block:
        - ucl:
            path: "{{ tests_dir }}/set.in"
            upath: "rootkey.subkey.key"
            value: newvalue
          register: result
        - debug:
            msg: "{{ msg.splitlines() }}"
          vars:
            msg: |-
              {{ result|to_nice_yaml }}
          when: debug|default(false)|bool
      tags: ex-set-in

    # Module ucl Example change file ownership and permissions examples - - - -

    - import_tasks:
        file: tasks/ex-fs-bck.yml

    # Module ucl Example validate - - - - - - - - - - - - - - - - - - - - - - -

    - block:
        - ucl:
            path: /etc/ssh/sshd_config
            owner: root
            group: wheel
            mode: '0644'
            upath: X11Forwarding
            value: 'no'
            lang: json
            validate: 'sshd -t -f %s'
          register: result
        - debug:
            msg: "{{ msg.splitlines() }}"
          vars:
            msg: |-
              {{ result|to_nice_yaml }}
          when: debug|default(false)|bool
      tags: ex-val-1

    # shell> ansible-playbook run_tests.yml -t ex-val-2 -e debug=true
    # message: Content changed. Validated. Temporary file moved to path.

    - block:
        - ucl:
            path: /etc/pkg/FreeBSD.conf
            owner: root
            group: wheel
            mode: '0644'
            upath: freebsd.enabled
            value: 'false'
            validate: 'pkg -C %s stat'
          register: result
        - debug:
            msg: "{{ msg.splitlines() }}"
          vars:
            msg: |-
              {{ result|to_nice_yaml }}
          when: debug|default(false)|bool
      tags: ex-val-2

    - block:
        - ucl:
            path: /etc/pkg/FreeBSD.conf
            owner: root
            group: wheel
            mode: '0644'
            upath: freebsd.enabled
            value: 'true'
            validate: 'pkg -C %s stat'
          register: result
        - debug:
            msg: "{{ msg.splitlines() }}"
          vars:
            msg: |-
              {{ result|to_nice_yaml }}
          when: debug|default(false)|bool
      tags: ex-val-3

# EOF
