---
- debug:
    msg: "Input: {{ test_in }}"
  when: debug|default(false)|bool

- find:
    path: "{{ tests_dir_local }}"
    patterns: "{{ (test_in|basename|splitext).0 }}_*.ansible"
  register: tests_ansible
  delegate_to: localhost
- debug:
    var: tests_ansible.files|map(attribute='path')|list
  when: debug|default(false)|bool

- set_fact:
    _tests: {}
- set_fact:
    _tests: "{{ _tests|combine({item: {'mod': _mod,
                                       'res': _res}}) }}"
  loop: "{{ tests_ansible.files|map(attribute='path')|list }}"
  vars:
    _mod: "{{ lookup('template', item)|from_yaml }}"
    _res: "{{ tests_dir }}/{{ (item|basename|splitext).0 }}.res"
- debug:
    var: _tests
  when: debug|default(false)|bool

- block:
    - community.general.ucl:
        path: "{{ test_in }}"
        chdir: "{{ item.value.mod.ucl.chdir|default(omit) }}"
        upath: "{{ item.value.mod.ucl.upath|default(omit) }}"
        ipath: "{{ item.value.mod.ucl.ipath|default(omit) }}"
        value: "{{ item.value.mod.ucl.value|default(omit) }}"
        type: "{{ item.value.mod.ucl.type|default(omit) }}"
        merge: "{{ item.value.mod.ucl.merge|default(omit) }}"
        state: "{{ item.value.mod.ucl.state|default(omit) }}"
        delimiter: "{{ item.value.mod.ucl.delimiter|default(omit) }}"
        lang: "{{ item.value.mod.ucl.lang|default(omit) }}"
        create: "{{ item.value.mod.ucl.create|default(omit) }}"
        backup: "{{ item.value.mod.ucl.backup|default(omit) }}"
        validate: "{{ item.value.mod.ucl.validate|default(omit) }}"
      register: tests_res
      loop: "{{ _tests|dict2items }}"
      loop_control:
        label: "{{ item.key }}"
  rescue:
    - debug:
        msg: "[ERR]: {{ test_in }} Failed."
- debug:
    var: tests_res
  when: debug|default(false)|bool

- debug:
    msg: "{{ msg.split('\n') }}"
  loop: "{{ tests_res.results }}"
  loop_control:
    label: "{{ item.item.key }}"
  vars:
    res: "{{ lookup('file', item.item.value.res)|string }}"
    msg: |-
      {{ item.stdout|type_debug }}
      {{ item.stdout|trim }}
      {{ res|type_debug }}
      {{ res|trim }}
  when: debug|default(false)|bool

- shell:
    cmd: "bash -c '{{ _cmd }}'"
  register: tests_diff
  loop: "{{ tests_res.results }}"
  loop_control:
    label: "{{ item.item.key }}"
  vars:
    res: "{{ lookup('file', item.item.value.res)|string }}"
    _cmd_diff: 'diff -B <(echo "{{ item.stdout }}") <(echo "{{ res }}")'
    _cmd_fail: '/usr/bin/false'
    _cmd: "{{ (item.rc == 0)|ternary(_cmd_diff, _cmd_fail) }}"
  delegate_to: localhost
  check_mode: false
  ignore_errors: true
  no_log: true

- debug:
    var: tests_diff
  when: debug|default(false)|bool

- debug:
    msg: "{{ msg.split('\n') }}"
  loop: "{{ tests_diff.results }}"
  loop_control:
    label: "{{ item.item.item.key }}"
  vars:
    msg: |-
      = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
      [ERR]: {{ item.item.item.key }}
      {{ item.invocation.module_args._raw_params }}
      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      {{ item.stdout }}
      = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
  when: item.rc != 0

- debug:
    msg: "{{ (_rc|int == 0)|
             ternary('[OK]  *** Test group: ' ~ _set ~ ' *** Passed.',
                     '[ERR] *** Test group: ' ~ _set ~ ' *** ' ~ _rc ~ ' item(s) failed.') }}"
  vars:
    _rc: "{{ tests_diff.results|selectattr('rc', 'ne', 0)|length }}"
    _set: "{{ (test_in|basename|splitext).0 }}"
